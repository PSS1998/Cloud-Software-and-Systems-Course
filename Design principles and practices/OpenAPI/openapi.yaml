openapi: 3.0.3
info:
  title: Photo management API
  description: |-
    Photo management API
  termsOfService: http://swagger.io/terms/
  contact:
    email: p_sadri_s@yahoo.com
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://server.com/api/v1
tags:
  - name: photo
    description: Everything about your Photo
paths:
  /photo:
    post:
      tags:
        - photo
      summary: Add a new pet to the store
      description: Add a new pet to the store
      operationId: addPet
      requestBody:
        description: Create a new photo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Success'
        required: true
      responses:
        '201':
          description: Photo successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo' 
        '422':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        'default':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /photo/{photo_id}:
    get:
      tags:
        - photo
      summary: Find photo by ID
      description: Returns a single photo
      parameters:
        - name: photo_id
          in: path
          description: ID of photo to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'      
        '404':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        'default':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - photo
      summary: Updates a photo
      parameters:
        - name: photo_id
          in: path
          description: ID of photo that needs to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: Updates a photo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Photo'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'      
        '404':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        'default':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - photo
      summary: Deletes a photo
      parameters:
        - name: photo_id
          in: path
          description: photo id to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successful operation
        '404':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        'default':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /photos:
    get:
      tags:
        - photo
      summary: Returns all photos
      parameters:
        - name: access
          in: query
          description: photo access
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photos'      
        '404':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        'default':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Photo:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 20
          example: 'ali'
        description:
          type: string
          maxLength: 100
        access:
          type: string
          enum:
            - public
            - private
        location:
          type: string
        file:
          type: string
        created_date:
          type: string
          format: date-time
        modified_date:
          type: string
          format: date-time
      required:
        - name
        - access
        - location
        - file
        - created_date
        - modified_date
    Photos:
      type: array
      items:
        $ref: '#/components/schemas/Photo'
    Success:
      type: object
      properties:
        message:
          type: string
        id:
          type: string
    Error:
      type: object
      properties:
        message:
          type: string
